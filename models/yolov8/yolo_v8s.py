# -*- coding: utf-8 -*-
"""yolo v8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z55ztr7ivxRxgF3sE0w6AUDpue2E6RqL
    
Using the trained .pt file for testing
"""

from ultralytics import YOLO
import numpy as np
import torch
import os
import cv2
from tqdm import tqdm

def yolo_test(input_='data/', output_='crop/', height=1080, width=1920):
    
    # 모델 로드
    # model = YOLO('weight/yolo_a_final.pt')  # 사전 훈련된 YOLOv8s 모델
    model = YOLO('weight/yolo/yolo.pt')  # 사전 훈련된 YOLOv8s 모델
    
    results = model(input_)  # Results 객체의 리스트 반환
    
    # 이미지 하나씩
    for result in tqdm(results, desc="Processing"):
        boxes = result.boxes  # bbox 출력을 위한 Boxes 객체
        confidences = boxes.conf.cpu().numpy()  # confidence 값을 numpy 배열로 변환
        # print('boxes::::::::::::', boxes)
        class_= boxes.cls
        image = cv2.imread(result.path)
                
        crop_list=[]
        for box, confidence, cl in zip(boxes.xyxy, confidences, class_):
            if confidence >=0.785 and cl == 0:
                # 모든 crop xyxy 좌표 리스트에 저장
                crop_list.append(box.tolist())
                # print('crop_list',crop_list)
                
        # 왼쪽 단면부터 정렬
        sorted_crop_list= sorted(crop_list, key=lambda x: x[0])
        
        count=0        
        # tqdm을 사용하여 진행 상황을 표시
        for i in range(len(sorted_crop_list)):
            if isinstance(i, int): # 모든 bar 판정
            # if 0<i and i<2: # 두번째 bar만 판정
            # if i<1: # 1개까지 판정
            # if i<2: # 2개까지 판정
                count+=1
                # print('here',sorted_crop_list)
                x_min, y_min, x_max, y_max = sorted_crop_list[i]
                # crop = image[int(y_min) : int(y_max), int(x_min) : int(x_max)]
                crop = image[max(0, int(y_min)-3):min(int(y_max)+3, height), max(0, int(x_min)-3):min(int(x_max)+3, width)]
                if x_min <= 3 or x_max >= width-3:
                    
                    # print('x축 경계면에 걸려서 nodetection')
                    continue
                elif  y_min < 0 or y_max > height-0: # 2023.12.03: 제품길이 길어서 bbox가 냉각대 바닥까지 있어도 YOLO검출은 양호시 판정되게 코드 수정
                    continue
                
                
                # file_name= result.path.split("\\")[-1].strip('.jpg')
                file_name= os.path.splitext(result.path.replace('\\', '/').split('/')[-1])[0]
                # print(file_name)
                save_name = f'{file_name}_{count}.jpg'
                save_path = os.path.join(output_, save_name)
                # # 진행 상황 표시
                # progress = (i + 1) / len(sorted_crop_list) * 100
                # print(f"진행 상황: {progress:.2f}% 완료", end='\r')
                # print("crop저장: ", save_name, '//', os.path.join(output_, save_name))
                cv2.imwrite(save_path, crop)
                # cv2.waitKey(0)
                # cv2.destroyAllWindows()
        
        # print('단면 추출 완료')
        # print(save_path)
    # yolo_test()